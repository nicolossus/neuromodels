# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Add conda to system path
        run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
      #  pip install .

    #- name: Install dependencies
    #  run: |
    #    $CONDA/bin/conda env update --file environment.yml --name base
    #    $CONDA/bin/pip install .
      #uses: goanpeca/setup-miniconda@v1
      #with:
      #  activate-environment: nm-dev
      #  environment-file: environment.yml
      #  python-version: ${{ matrix.python-version }}
      #  auto-activate-base: false

    #- uses: actions/checkout@v2
    #- name: Set up Python ${{ matrix.python-version }}
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: ${{ matrix.python-version }}

    #- name: Build
    #  shell: bash -l {0}
    #  run: |
    #    pip install -e .[dev]
    - name: Test with pytest
      run: |
      # $CONDA/bin/pytest
        pytest

    #- name: Install dependencies
    #  run: |
    #    python -m pip install --upgrade pip
    #    pip install -e .[dev]

    #- name: Lint with flake8
    #  run: |
        # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    #- name: Test with pytest
    #  run: |
    #    pytest

    #--cov=./neuromodels --cov-report=xml
    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:
        #file: ./coverage.xml
        #flags: unittests
        #env_vars: OS,PYTHON
        #name: codecov-umbrella
    #    verbose: true
    #    fail_ci_if_error: true
    #    patch: off
